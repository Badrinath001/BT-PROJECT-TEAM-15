# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gTFXohWQ9xDkL-nxFhan12OkKY2RavlK
"""

!pip install scikit-learn tensorflow matplotlib --quiet

import numpy as np
import pandas as pd
from sklearn.ensemble import IsolationForest, RandomForestClassifier
from sklearn.metrics import classification_report
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense

# Synthetic blockchain dataset
np.random.seed(42)
n_samples = 1000

data = pd.DataFrame({
    "tx_volume": np.random.poisson(10, n_samples),
    "gas_used": np.random.normal(20000, 5000, n_samples),
    "contract_calls": np.random.poisson(3, n_samples),
    "network_latency": np.random.normal(50, 10, n_samples),
    "anomaly_score": np.random.uniform(0, 1, n_samples),
})

labels = np.random.choice([0,1], size=n_samples, p=[0.9,0.1])  # 0=Normal, 1=Threat

# Train Isolation Forest for anomaly detection
iso = IsolationForest(contamination=0.1, random_state=42)
iso.fit(data)
preds = iso.predict(data)

# Convert predictions (-1=anomaly, 1=normal) to binary
preds = [1 if p == -1 else 0 for p in preds]

print(classification_report(labels, preds))